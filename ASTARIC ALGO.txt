graph = {
    "A": {"B": 1, "C": 3, "D": 5},
    "B": {"E": 3},
    "D": {"H": 2},
    "C": {"F": 5},
    "E": {},
    "F": {},
    "G": {},
    "H": {"G": 1},
}

H = {
    "A": 0,
    "B": 1,
    "D": 3,
    "C": 5,
    "E": 4,
    "F": 8,
    "G": 8,
    "H": 7
}

def astaric(start, goal):
    path = [start]
    cost = 0
    frontier = [cost, path]
    visited = []

    while frontier:
        i = 0
        minindex = 0
        while i < len(frontier):
            if H[frontier[minindex + 1][-1]] + frontier[minindex] > H[frontier[i + 1][-1]] + frontier[i]:
                minindex = i
            i += 2

        cost = frontier.pop(minindex)
        path = frontier.pop(minindex)
        expand = path[-1]

        if expand not in visited:
            visited.append(expand)
            if expand == goal:
                print("COST:", cost)
                print("visited:", visited)
                return path

            for n in graph[expand]:
                new = list(path)
                new.append(n)
                frontier.append(cost + graph[expand][n])
                frontier.append(new)

    return path

print(astaric('A', 'G'))
