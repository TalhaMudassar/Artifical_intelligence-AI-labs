#hill climbing
import random
graph = {
    'A':['B','C'],
    'B':['A','C','D'],
    'C':['A','B','E'],
    'D':['B','E','F'],
    'E':['C','D','F'],
    'F':['D','E'],
}
heuristic = {
    'A': 25,
    'B': 8,
    'C':20,
    'D':6,
    'E':12,
    'F':0,
}

def steepesthill(start,goal):
    node = start
    stack = [node]
    visited = []
    while stack:
        node = stack.pop()
        print(node)
        if node == goal:
            print("goal node are found ")
            break

        child=[]
        for i in reversed(graph[node]):
            if i not in visited and heuristic[i] < heuristic[node]:
                child.append(i)
        stack.extend(child)
        visited.append(node)
    




    
def randomhill(start,goal):
    node = start
    while True:
        print(node)
        if node == goal:
            print("Goal found")
            break
        randomnode = graph[node][random.randint(0,len(graph[node]) -1 )]
        if randomnode  == node:
            print("maximum goal point is found")
            break
        node = randomnode
        

def simplehill(start,goal):
    node= start
    while True:
        print(node)
        if node == goal:
            print("Goal Node found")
            break

        minm = node
        for i in graph[node]:
            if heuristic[minm] > heuristic[i]:
                minm = i
        if minm  ==  node:
            print("Maximum goal point is found")
            break
        node = minm
simplehill('A','F')
randomhill('A','F')
steepesthill('A','F')